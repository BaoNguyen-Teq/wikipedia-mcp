name: Release Wikipedia MCP

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.4.0'
      is_prerelease:
        description: 'Is this a pre-release?'
        type: boolean
        required: true
        default: false

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Update version in setup.py
        run: |
          sed -i "s/version=\"[0-9]*\\.[0-9]*\\.[0-9]*\"/version=\"${{ github.event.inputs.version }}\"/g" setup.py
          cat setup.py

      - name: Build package
        run: |
          python -m build

      - name: Create release tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add setup.py
          git commit -m "Bump version to ${{ github.event.inputs.version }}"
          git tag -a v${{ github.event.inputs.version }} -m "Version ${{ github.event.inputs.version }}"
          git push origin v${{ github.event.inputs.version }}
          git push origin main

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Wikipedia MCP v${{ github.event.inputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ github.event.inputs.is_prerelease }}
          files: |
            dist/*.tar.gz
            dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to PyPI
        if: ${{ !github.event.inputs.is_prerelease }}
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*
